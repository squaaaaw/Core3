/*
 *	autogen/server/zone/objects/area/SarlaccArea.h generated by engine3 IDL compiler 0.60
 */

#ifndef SARLACCAREA_H_
#define SARLACCAREA_H_

#include "engine/core/Core.h"

#include "engine/core/ManagedReference.h"

#include "engine/core/ManagedWeakReference.h"

#ifndef likely
#ifdef __GNUC__
#define likely(x)       __builtin_expect(!!(x), 1)
#define unlikely(x)     __builtin_expect(!!(x), 0)
#else
#define likely(x)       (x)
#define unlikely(x)     (x)
#endif
#endif
namespace server {
namespace zone {
namespace objects {
namespace scene {

class SceneObject;

} // namespace scene
} // namespace objects
} // namespace zone
} // namespace server

using namespace server::zone::objects::scene;

#include "server/zone/objects/area/ActiveArea.h"

namespace server {
namespace zone {
namespace objects {
namespace area {

class SarlaccArea : public ActiveArea {
public:
	SarlaccArea();

	void updateEruptTime();

	void notifyEnter(SceneObject* player);

	DistributedObjectServant* _getImplementation();
	DistributedObjectServant* _getImplementationForRead() const;

	void _setImplementation(DistributedObjectServant* servant);

protected:
	SarlaccArea(DummyConstructorParameter* param);

	virtual ~SarlaccArea();

	friend class SarlaccAreaHelper;
};

} // namespace area
} // namespace objects
} // namespace zone
} // namespace server

using namespace server::zone::objects::area;

namespace server {
namespace zone {
namespace objects {
namespace area {

class SarlaccAreaImplementation : public ActiveAreaImplementation {
protected:
	Time lastErupt;

public:
	SarlaccAreaImplementation();

	SarlaccAreaImplementation(DummyConstructorParameter* param);

	void updateEruptTime();

	void notifyEnter(SceneObject* player);

	WeakReference<SarlaccArea*> _this;

	operator const SarlaccArea*();

	DistributedObjectStub* _getStub();
	virtual void readObject(ObjectInputStream* stream);
	virtual void writeObject(ObjectOutputStream* stream);
protected:
	virtual ~SarlaccAreaImplementation();

	void finalize();

	void _initializeImplementation();

	void _setStub(DistributedObjectStub* stub);

	void lock(bool doLock = true);

	void lock(ManagedObject* obj);

	void rlock(bool doLock = true);

	void wlock(bool doLock = true);

	void wlock(ManagedObject* obj);

	void unlock(bool doLock = true);

	void runlock(bool doLock = true);

	void _serializationHelperMethod();
	bool readObjectMember(ObjectInputStream* stream, const uint32& nameHashCode);
	int writeObjectMembers(ObjectOutputStream* stream);

	friend class SarlaccArea;
};

class SarlaccAreaAdapter : public ActiveAreaAdapter {
public:
	SarlaccAreaAdapter(SarlaccArea* impl);

	void invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void updateEruptTime();

	void notifyEnter(SceneObject* player);

};

class SarlaccAreaHelper : public DistributedObjectClassHelper, public Singleton<SarlaccAreaHelper> {
	static SarlaccAreaHelper* staticInitializer;

public:
	SarlaccAreaHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectServant* instantiateServant();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class Singleton<SarlaccAreaHelper>;
};

} // namespace area
} // namespace objects
} // namespace zone
} // namespace server

using namespace server::zone::objects::area;

#endif /*SARLACCAREA_H_*/
